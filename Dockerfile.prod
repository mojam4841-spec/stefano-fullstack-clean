# Multi-stage production Dockerfile for Stefano Restaurant
FROM node:18-alpine AS builder

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache curl wget

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Install system dependencies for production
RUN apk add --no-cache curl wget dumb-init

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S stefano -u 1001

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder --chown=stefano:nodejs /app/dist ./dist
COPY --from=builder --chown=stefano:nodejs /app/client/dist ./client/dist

# Copy necessary config files
COPY --chown=stefano:nodejs ./.htaccess ./
COPY --chown=stefano:nodejs ./robots.txt ./
COPY --chown=stefano:nodejs ./sitemap.xml ./

# Create logs directory
RUN mkdir -p logs && chown stefano:nodejs logs

# Switch to non-root user
USER stefano

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/api/health || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["npm", "start"]